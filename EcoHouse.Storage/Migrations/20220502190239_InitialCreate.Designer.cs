// <auto-generated />
using EcoHouse.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcoHouse.Storage.Migrations
{
    [DbContext(typeof(UniversityContext))]
    [Migration("20220502190239_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EcoHouse.Storage.Entities.Dish", b =>
                {
                    b.Property<int>("Dish_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dish_ID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mass")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Process_")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Structure_")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Dish_ID");

                    b.HasIndex("Process_");

                    b.HasIndex("Structure_");

                    b.ToTable("dishes");
                });

            modelBuilder.Entity("EcoHouse.Storage.Entities.Process", b =>
                {
                    b.Property<string>("Process_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Recipe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Process_ID");

                    b.ToTable("processes");
                });

            modelBuilder.Entity("EcoHouse.Storage.Entities.Structure", b =>
                {
                    b.Property<string>("Structure_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Calorific")
                        .HasColumnType("real");

                    b.Property<float>("Carbohydrates")
                        .HasColumnType("real");

                    b.Property<float>("Fats")
                        .HasColumnType("real");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Proteins")
                        .HasColumnType("real");

                    b.HasKey("Structure_ID");

                    b.ToTable("structures");
                });

            modelBuilder.Entity("EcoHouse.Storage.Entities.Dish", b =>
                {
                    b.HasOne("EcoHouse.Storage.Entities.Process", "Process")
                        .WithMany()
                        .HasForeignKey("Process_")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoHouse.Storage.Entities.Structure", "Structure")
                        .WithMany()
                        .HasForeignKey("Structure_")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");

                    b.Navigation("Structure");
                });
#pragma warning restore 612, 618
        }
    }
}
